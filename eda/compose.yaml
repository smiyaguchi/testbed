services:
  # Zookeeper
  zookeeper:
    image: 'quay.io/debezium/zookeeper:2.6'
    ports: 
      - '2181:2181'
      - '2888:2888'
      - '3888:3888'
      - '9010:9010'
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - JMXHOST=0.0.0.0
      - JMXPORT=9010
    tty: true
    healthcheck:
      test: ./bin/zkCli.sh ls /
      start_period: 1m
      start_interval: 5s
      interval: 5m
      timeout: 10s
      retries: 10
    networks:
      - kafka_network

  # Kafka Broker
  kafka:
    image: 'quay.io/debezium/kafka:2.6'
    ports:
      - '9011:9011'
      - '9092:9092'
      - '9093:9093'
      - '9094:9094'
    container_name: kafka
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - JMXHOST=0.0.0.0
      - JMXPORT=9011
    tty: true
    healthcheck:
      test: ./bin/kafka-topics.sh --bootstrap-server kafka:9092 --list
      start_period: 1m
      start_interval: 5s
      interval: 5m
      timeout: 10s
      retries: 10
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - kafka_network

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - '8081:8081'
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=2181
      - KAFKA_CLUSTERS_0_READONLY=false
      - SERVER_PORT=8081
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka_network

  mysql:
    image: "mysql:8.0.32"
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
    volumes:
      - ./container/mysql/cnf/master.cnf:/etc/mysql/conf.d/my.cnf
      - ./container/mysql/script:/docker-entrypoint-initdb.d
    healthcheck:
      test: "mysqladmin ping -h localhost -u root -p$$MYSQL_ROOT_PASSWORD"
      start_period: 1m
      start_interval: 5s
      interval: 5m
      timeout: 10s
      retries: 10
    networks:
      - "kafka_network"

  connect:
    build:
      context: container/debezium
        # image: "quay.io/debezium/connect:2.6"
    container_name: connect
    ports:
      - "8083:8083"
      - "8778:8778"
      - "1976:1976"
      - "8090:8090"
      - "8080:8080"
    environment:
      - "BOOTSTRAP_SERVERS=kafka:9092"
      - "GROUP_ID=1"
      - "CONFIG_STORAGE_TOPIC=connect_configs"
      - "OFFSET_STORAGE_TOPIC=connect_offsets"
      - "STATUS_STORAGE_TOPIC=connect_status"
      - "KAFKA_OPTS=-javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=8080:/kafka/etc/config.yml"
      - "JMXHOST=0.0.0.0"
      - "JMXPORT=1976"
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - kafka_network

        # debezium-ui:
        #   image: "quay.io/debezium/debezium-ui:2.4"
        #   container_name: debezium-ui
        #   ports:
        #     - "8080:8080"
        #   environment:
        #     - "KAFKA_CONNECT_URIS=http://connect:8083"
        #   depends_on:
        #     - "connect"
        #   networks:
        #     - kafka_network

  prometheus:
    build:
      context: container/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml
    container_name: prom
    ports:
      - "9090:9090"
    networks:
      - kafka_network

  grafana:
    build:
      context: container/grafana
    container_name: grafana
    environment:
      - DS_PROMETHEUS=prometheus
    ports:
      - "3000:3000"
    networks:
      - kafka_network

        # ubuntu:
        #   image: "ubuntu"
        #   container_name: ubuntu
        #   tty: true
        #   networks:
        #     - kafka_network

networks:
  kafka_network:
